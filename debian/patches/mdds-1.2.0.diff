From db729f3b685fd832a3ec7387b339cf2bbeb4bd4d Mon Sep 17 00:00:00 2001
From: Kohei Yoshida <kohei.yoshida@gmail.com>
Date: Wed, 11 May 2016 21:45:56 -0400
Subject: Update mdds to 1.2.0.  Note that the API version is also up.

liborcus-0.11.2 is out only to make it buildable with mdds-1.2.

Change-Id: I9648d827b008da252c57be0ebfd2efccb008ac70
Reviewed-on: https://gerrit.libreoffice.org/24944
Tested-by: Jenkins <ci@libreoffice.org>
Reviewed-by: Kohei Yoshida <libreoffice@kohei.us>

diff --git a/configure.ac b/configure.ac
index 3f1b7f0..6dea282 100644
--- a/configure.ac
+++ b/configure.ac
@@ -8832,7 +8832,7 @@ AC_SUBST(SYSTEM_BOOST)
 dnl ===================================================================
 dnl Check for system mdds
 dnl ===================================================================
-libo_CHECK_SYSTEM_MODULE([mdds], [MDDS], [mdds >= 0.12.0], ["-I${WORKDIR}/UnpackedTarball/mdds/include"])
+libo_CHECK_SYSTEM_MODULE([mdds], [MDDS], [mdds-1.2 >= 1.2.0], ["-I${WORKDIR}/UnpackedTarball/mdds/include"])
 
 dnl ===================================================================
 dnl Check for system glm
@@ -9148,7 +9148,7 @@ if test -z "$enable_orcus" -o "$enable_orcus" != no; then
     ENABLE_ORCUS="TRUE"
     AC_DEFINE(ENABLE_ORCUS)
 
-    libo_CHECK_SYSTEM_MODULE([orcus],[ORCUS],[liborcus-0.11 >= 0.11.0])
+    libo_CHECK_SYSTEM_MODULE([orcus],[ORCUS],[liborcus-0.11 >= 0.11.2])
     if test "$with_system_orcus" != "yes"; then
         if test "$SYSTEM_BOOST" = "TRUE"; then
             # ===========================================================
diff --git a/download.lst b/download.lst
index a2483c2..ddd6edc 100644
--- a/download.lst
+++ b/download.lst
@@ -94,8 +94,8 @@
 export LIBXSLT_TARBALL := 9667bf6f9310b957254fdcf6596600b7-libxslt-1.1.28.tar.gz
 export LPSOLVE_TARBALL := 26b3e95ddf3d9c077c480ea45874b3b8-lp_solve_5.5.tar.gz
 export MARIADB_TARBALL := a233181e03d3c307668b4c722d881661-mariadb_client-2.0.0-src.tar.gz
-export MDDS_MD5SUM := ef2560ed5416652a7fe195305b14cebe
-export MDDS_TARBALL := mdds_0.12.1.tar.bz2
+export MDDS_MD5SUM := 9f3383fb7bae825eab69f3a6ec1d74b2
+export MDDS_TARBALL := mdds-1.2.0.tar.bz2
 export MSPUB_MD5SUM := ff9d0f9dd8fbc523408ea1953d5bde41
 export MSPUB_TARBALL := libmspub-0.1.2.tar.bz2
 export MWAW_MD5SUM := 4a8a53a9d997cf0e2bd208178797dbfb
@@ -113,8 +113,8 @@
 export OPENLDAP_TARBALL := 804c6cb5698db30b75ad0ff1c25baefd-openldap-2.4.31.tgz
 export OPENSSL_MD5SUM := 9392e65072ce4b614c1392eefc1f23d0
 export OPENSSL_TARBALL := openssl-1.0.2h.tar.gz
-export ORCUS_MD5SUM := ca1e5d486b29cd519bb1d9845a6a768e
-export ORCUS_TARBALL := liborcus-0.11.0.tar.gz
+export ORCUS_MD5SUM := 205badaee72adf99422add8c4c49d669
+export ORCUS_TARBALL := liborcus-0.11.2.tar.gz
 export OWNCLOUD_ANDROID_LIB_MD5SUM := 593f0aa47bf2efc0efda2d28fae063b2
 export OWNCLOUD_ANDROID_LIB_TARBALL := owncloud-android-library-0.9.4-no-binary-deps.tar.gz
 export PAGEMAKER_MD5SUM := 795cc7a59ace4db2b12586971d668671
diff --git a/sc/inc/mtvelements.hxx b/sc/inc/mtvelements.hxx
index 0bc5162..18edafc 100644
--- a/sc/inc/mtvelements.hxx
+++ b/sc/inc/mtvelements.hxx
@@ -53,6 +53,7 @@ const mdds::mtv::element_t element_type_cellnote = mdds::mtv::element_type_user_
 /// Mapped standard element types (for convenience).
 const mdds::mtv::element_t element_type_numeric = mdds::mtv::element_type_numeric;
 const mdds::mtv::element_t element_type_empty = mdds::mtv::element_type_empty;
+const mdds::mtv::element_t element_type_uint16 = mdds::mtv::element_type_ushort;
 
 /// Custom element blocks.
 
@@ -65,6 +66,7 @@ typedef mdds::mtv::noncopyable_managed_element_block<element_type_formula, ScFor
 
 /// Mapped standard element blocks (for convenience).
 typedef mdds::mtv::numeric_element_block numeric_block;
+typedef mdds::mtv::ushort_element_block uint16_block;
 
 /// This needs to be in the same namespace as CellTextAttr.
 MDDS_MTV_DEFINE_ELEMENT_CALLBACKS(CellTextAttr, element_type_celltextattr, CellTextAttr(), celltextattr_block)
diff --git a/sc/source/core/tool/scmatrix.cxx b/sc/source/core/tool/scmatrix.cxx
index f1ce9a5..1689809 100644
--- a/sc/source/core/tool/scmatrix.cxx
+++ b/sc/source/core/tool/scmatrix.cxx
@@ -57,17 +57,15 @@ using ::std::unary_function;
  * Custom string trait struct to tell mdds::multi_type_matrix about the
  * custom string type and how to handle blocks storing them.
  */
-struct custom_string_trait
+struct matrix_trait
 {
-    typedef svl::SharedString string_type;
     typedef sc::string_block string_element_block;
-
-    static const mdds::mtv::element_t string_type_identifier = sc::element_type_string;
+    typedef sc::uint16_block integer_element_block;
 
     typedef mdds::mtv::custom_block_func1<sc::string_block> element_block_func;
 };
 
-typedef mdds::multi_type_matrix<custom_string_trait> MatrixImplType;
+typedef mdds::multi_type_matrix<matrix_trait> MatrixImplType;
 
 namespace {
 
@@ -2304,6 +2302,7 @@ public:
                 }
             }
             break;
+            case mdds::mtm::element_integer:
             case mdds::mtm::element_string:
             case mdds::mtm::element_empty:
             default:
diff --git a/svl/source/misc/gridprinter.cxx b/svl/source/misc/gridprinter.cxx
index 4044b3e..70e7439 100644
--- a/svl/source/misc/gridprinter.cxx
+++ b/svl/source/misc/gridprinter.cxx
@@ -26,12 +26,10 @@ const mdds::mtv::element_t element_type_string = mdds::mtv::element_type_user_st
 // String block
 typedef mdds::mtv::default_element_block<element_type_string, OUString> string_block;
 
-struct custom_string_trait
+struct matrix_trait
 {
-    typedef OUString string_type;
     typedef string_block string_element_block;
-
-    static const mdds::mtv::element_t string_type_identifier = element_type_string;
+    typedef mdds::mtv::ushort_element_block integer_element_block;
 
     typedef mdds::mtv::custom_block_func1<string_block> element_block_func;
 };
@@ -48,7 +46,7 @@ MDDS_MTV_DEFINE_ELEMENT_CALLBACKS(OUString, svl::element_type_string, OUString()
 
 namespace svl {
 
-typedef mdds::multi_type_matrix<custom_string_trait> MatrixImplType;
+typedef mdds::multi_type_matrix<matrix_trait> MatrixImplType;
 
 struct GridPrinter::Impl
 {
-- 
cgit v0.10.2

diff -urN mdds-old/0001-another-step-to-allow-fst-to-use-any-value-type.patch.1 mdds/0001-another-step-to-allow-fst-to-use-any-value-type.patch.1
--- a/external/mdds/0001-another-step-to-allow-fst-to-use-any-value-type.patch.1	2016-05-04 00:51:19.000000000 +0200
+++ b/external/mdds/0001-another-step-to-allow-fst-to-use-any-value-type.patch.1	1970-01-01 01:00:00.000000000 +0100
@@ -1,55 +0,0 @@
-From 5fc9214fb94595e1a2c0b9e0285037f5a2fa59bf Mon Sep 17 00:00:00 2001
-From: David Tardon <dtardon@redhat.com>
-Date: Mon, 29 Jun 2015 14:28:42 +0200
-Subject: [PATCH] another step to allow fst to use any value type
-
-For some reason this is not a problem on modern compilers...
----
- include/mdds/flat_segment_tree.hpp     | 1 -
- include/mdds/flat_segment_tree_def.inl | 2 +-
- src/flat_segment_tree_test.cpp         | 4 ++++
- 3 files changed, 5 insertions(+), 2 deletions(-)
-
-diff --git a/include/mdds/flat_segment_tree.hpp b/include/mdds/flat_segment_tree.hpp
-index b656bc3..02cf87e 100644
---- a/include/mdds/flat_segment_tree.hpp
-+++ b/include/mdds/flat_segment_tree.hpp
-@@ -32,7 +32,6 @@
- #include <sstream>
- #include <utility>
- #include <cassert>
--#include <limits>
- 
- #include "mdds/node.hpp"
- #include "mdds/flat_segment_tree_itr.hpp"
-diff --git a/include/mdds/flat_segment_tree_def.inl b/include/mdds/flat_segment_tree_def.inl
-index ebfee99..5fef1c3 100644
---- a/include/mdds/flat_segment_tree_def.inl
-+++ b/include/mdds/flat_segment_tree_def.inl
-@@ -46,7 +46,7 @@ flat_segment_tree<_Key, _Value>::flat_segment_tree(key_type min_val, key_type ma
-     // We don't ever use the value of the right leaf node, but we need the
-     // value to be always the same, to make it easier to check for
-     // equality.
--    m_right_leaf->value_leaf.value = ::std::numeric_limits<value_type>::max();
-+    m_right_leaf->value_leaf.value = init_val;
- }
- 
- template<typename _Key, typename _Value>
-diff --git a/src/flat_segment_tree_test.cpp b/src/flat_segment_tree_test.cpp
-index 81858f5..f7aead7 100644
---- a/src/flat_segment_tree_test.cpp
-+++ b/src/flat_segment_tree_test.cpp
-@@ -1943,6 +1943,10 @@ void fst_test_non_numeric_value()
-     db.search(1, result);
- 
-     assert(result == "hello world");
-+
-+    db_type db2(db);
-+
-+    assert(db == db2);
- }
- 
- void fst_test_non_numeric_key()
--- 
-2.4.2
-
diff -urN mdds-old/mdds_0.6.0.patch mdds/mdds_0.6.0.patch
--- a/external/mdds/mdds_0.6.0.patch	2016-05-04 00:51:19.000000000 +0200
+++ b/external/mdds/mdds_0.6.0.patch	1970-01-01 01:00:00.000000000 +0100
@@ -1,54 +0,0 @@
---- misc/mdds_0.6.0/include/mdds/mixed_type_matrix_def.inl	2011-07-13 13:26:27.000000000 -0600
-+++ misc/build/mdds_0.6.0/include/mdds/mixed_type_matrix_def.inl	2011-07-20 02:02:21.164198900 -0600
-@@ -216,8 +216,8 @@
-         // assignment to self.
-         return;
- 
--    size_t row_count = ::std::min(mp_storage->rows(), r.mp_storage->rows());
--    size_t col_count = ::std::min(mp_storage->cols(), r.mp_storage->cols());
-+    size_t row_count = (::std::min)(mp_storage->rows(), r.mp_storage->rows());
-+    size_t col_count = (::std::min)(mp_storage->cols(), r.mp_storage->cols());
-     for (size_t i = 0; i < row_count; ++i)
-         for (size_t j = 0; j < col_count; ++j)
-             mp_storage->get_element(i, j) = r.mp_storage->get_element(i, j);
---- misc/mdds_0.6.0/include/mdds/mixed_type_matrix_storage_filled_linear.inl	2011-07-13 13:26:27.000000000 -0600
-+++ misc/build/mdds_0.6.0/include/mdds/mixed_type_matrix_storage_filled_linear.inl	2011-07-20 02:02:21.179798900 -0600
-@@ -354,8 +354,8 @@
-         }
- 
-         array_type new_array(new_size, &m_init_elem);
--        size_t min_rows = ::std::min(row, m_rows);
--        size_t min_cols = ::std::min(col, m_cols);
-+        size_t min_rows = (::std::min)(row, m_rows);
-+        size_t min_cols = (::std::min)(col, m_cols);
-         for (size_t i = 0; i < min_rows; ++i)
-         {
-             for (size_t j = 0; j < min_cols; ++j)
-@@ -612,8 +612,8 @@
-         }
- 
-         array_type new_array(new_size, element(0.0));
--        size_t min_rows = ::std::min(row, m_rows);
--        size_t min_cols = ::std::min(col, m_cols);
-+        size_t min_rows = (::std::min)(row, m_rows);
-+        size_t min_cols = (::std::min)(col, m_cols);
-         for (size_t i = 0; i < min_rows; ++i)
-         {
-             for (size_t j = 0; j < min_cols; ++j)
---- misc/mdds_0.6.0/include/mdds/point_quad_tree.hpp	2011-07-13 13:26:27.000000000 -0600
-+++ misc/build/mdds_0.6.0/include/mdds/point_quad_tree.hpp	2011-07-20 02:04:36.088835900 -0600
-@@ -623,10 +623,10 @@
- template<typename _Key, typename _Data>
- void point_quad_tree<_Key,_Data>::insert(key_type x, key_type y, data_type data)
- {
--    m_xrange.first  = ::std::min(m_xrange.first,  x);
--    m_xrange.second = ::std::max(m_xrange.second, x);
--    m_yrange.first  = ::std::min(m_yrange.first,  y);
--    m_yrange.second = ::std::max(m_yrange.second, y);
-+    m_xrange.first  = (::std::min)(m_xrange.first,  x);
-+    m_xrange.second = (::std::max)(m_xrange.second, x);
-+    m_yrange.first  = (::std::min)(m_yrange.first,  y);
-+    m_yrange.second = (::std::max)(m_yrange.second, y);
- 
-     if (!m_root)
-     {
diff -urN mdds-old/mdds-c++98.patch.0 mdds/mdds-c++98.patch.0
--- a/external/mdds/mdds-c++98.patch.0	2016-05-04 00:51:19.000000000 +0200
+++ b/external/mdds/mdds-c++98.patch.0	1970-01-01 01:00:00.000000000 +0100
@@ -1,84 +0,0 @@
---- include/mdds/multi_type_vector_itr.hpp
-+++ include/mdds/multi_type_vector_itr.hpp
-@@ -139,14 +139,15 @@
-     typedef typename parent_type::size_type size_type;
-     typedef iterator_value_node<size_type, typename parent_type::element_block_type> node;
- 
--    iterator_common_base() : m_cur_node(0, 0) {}
-+    iterator_common_base() : m_cur_node(0, 0), m_singular(true) {}
- 
-     iterator_common_base(
-         const base_iterator_type& pos, const base_iterator_type& end,
-         size_type start_pos, size_type block_index) :
-         m_cur_node(start_pos, block_index),
-         m_pos(pos),
--        m_end(end)
-+        m_end(end),
-+        m_singular(false)
-     {
-         if (m_pos != m_end)
-             update_node();
-@@ -154,9 +155,13 @@
- 
-     iterator_common_base(const iterator_common_base& other) :
-         m_cur_node(other.m_cur_node),
--        m_pos(other.m_pos),
--        m_end(other.m_end)
-+        m_singular(other.m_singular)
-     {
-+        if (!m_singular)
-+        {
-+            m_pos = other.m_pos;
-+            m_end = other.m_end;
-+        }
-     }
- 
-     void update_node()
-@@ -196,6 +201,7 @@
-     node m_cur_node;
-     base_iterator_type m_pos;
-     base_iterator_type m_end;
-+    bool m_singular;
- 
- public:
-     bool operator== (const iterator_common_base& other) const
-@@ -218,8 +224,12 @@
-     iterator_common_base& operator= (const iterator_common_base& other)
-     {
-         m_cur_node = other.m_cur_node;
--        m_pos = other.m_pos;
--        m_end = other.m_end;
-+        m_singular = other.m_singular;
-+        if (!m_singular)
-+        {
-+            m_pos = other.m_pos;
-+            m_end = other.m_end;
-+        }
-         return *this;
-     }
- 
-@@ -226,8 +236,22 @@
-     void swap(iterator_common_base& other)
-     {
-         m_cur_node.swap(other.m_cur_node);
--        std::swap(m_pos, other.m_pos);
--        std::swap(m_end, other.m_end);
-+        std::swap(m_singular, other.m_singular);
-+        if (!(m_singular || other.m_singular))
-+        {
-+            std::swap(m_pos, other.m_pos);
-+            std::swap(m_end, other.m_end);
-+        }
-+        else if (!m_singular)
-+        {
-+            m_pos = other.m_pos;
-+            m_end = other.m_end;
-+        }
-+        else if (!other.m_singular)
-+        {
-+            other.m_pos = m_pos;
-+            other.m_end = m_end;
-+        }
-     }
- 
-     const node& get_node() const { return m_cur_node; }
diff -urN mdds-old/UnpackedTarball_mdds.mk mdds/UnpackedTarball_mdds.mk
--- a/external/mdds/UnpackedTarball_mdds.mk	2016-05-19 11:39:06.621747752 +0200
+++ b/external/mdds/UnpackedTarball_mdds.mk	2016-05-19 11:41:23.009627279 +0200
@@ -14,9 +14,6 @@
 $(eval $(call gb_UnpackedTarball_set_patchlevel,mdds,3))
 
 $(eval $(call gb_UnpackedTarball_add_patches,mdds,\
-	external/mdds/mdds_0.6.0.patch \
-	external/mdds/mdds-c++98.patch.0 \
-	external/mdds/0001-another-step-to-allow-fst-to-use-any-value-type.patch.1 \
 ))
 
 # vim: set noet sw=4 ts=4:
