From a803ec69f69068e0c45a7825094941b9ea765c1c Mon Sep 17 00:00:00 2001
From: Khaled Hosny <khaledhosny@eglug.org>
Date: Mon, 17 Aug 2015 00:49:39 +0200
Subject: Fix GTK3 right-to-left rendering
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

* Reverse the direction of arrows e.g. in menus
* Reverse the position of combobox button

They are lumped together because fixing one breaks the other

Change-Id: I65afb08785e67db72a72ad39f1de56db037b640a
Reviewed-on: https://gerrit.libreoffice.org/17788
Tested-by: Jenkins <ci@libreoffice.org>
Reviewed-by: Norbert Thiebaud <nthiebaud@gmail.com>
Reviewed-on: https://gerrit.libreoffice.org/17845
Reviewed-by: Caol치n McNamara <caolanm@redhat.com>
Tested-by: Caol치n McNamara <caolanm@redhat.com>

diff --git a/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx b/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx
index 126d6d1..1f04b2e 100644
--- a/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx
+++ b/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx
@@ -77,6 +77,11 @@ static void NWConvertVCLStateToGTKState( ControlState nVCLState,
 
     if ( nVCLState & ControlState::FOCUSED )
         *nGTKState = (GtkStateFlags) (*nGTKState | GTK_STATE_FLAG_FOCUSED);
+
+    if (AllSettings::GetLayoutRTL())
+    {
+        *nGTKState = (GtkStateFlags) (*nGTKState | GTK_STATE_FLAG_DIR_RTL);
+    }
 }
 
 enum {
@@ -661,9 +666,11 @@ Rectangle GtkSalGraphics::NWGetComboBoxButtonRect( ControlType nType,
     nButtonWidth = nArrowWidth + padding.left + padding.right;
     if( nPart == PART_BUTTON_DOWN )
     {
+        Point aPos = Point(aAreaRect.Left() + aAreaRect.GetWidth() - nButtonWidth, aAreaRect.Top());
+        if (AllSettings::GetLayoutRTL())
+            aPos.X() = aAreaRect.Left();
         aButtonRect.SetSize( Size( nButtonWidth, aAreaRect.GetHeight() ) );
-        aButtonRect.SetPos( Point( aAreaRect.Left() + aAreaRect.GetWidth() - nButtonWidth,
-                                   aAreaRect.Top() ) );
+        aButtonRect.SetPos(aPos);
     }
     else if( nPart == PART_SUB_EDIT )
     {
@@ -675,7 +682,10 @@ Rectangle GtkSalGraphics::NWGetComboBoxButtonRect( ControlType nType,
         aButtonRect.SetSize( Size( aAreaRect.GetWidth() - nButtonWidth - (adjust_left + adjust_right),
                                    aAreaRect.GetHeight() - (adjust_top + adjust_bottom)) );
         Point aEditPos = aAreaRect.TopLeft();
-        aEditPos.X() += adjust_left;
+        if (AllSettings::GetLayoutRTL())
+            aEditPos.X() += nButtonWidth;
+        else
+            aEditPos.X() += adjust_left;
         aEditPos.Y() += adjust_top;
         aButtonRect.SetPos( aEditPos );
     }
@@ -703,6 +713,8 @@ void GtkSalGraphics::PaintCombobox( GtkStateFlags flags, cairo_t *cr,
 
     Rectangle        aEditBoxRect( areaRect );
     aEditBoxRect.SetSize( Size( areaRect.GetWidth() - buttonRect.GetWidth(), aEditBoxRect.GetHeight() ) );
+    if (AllSettings::GetLayoutRTL())
+        aEditBoxRect.SetPos( Point( areaRect.Left() + buttonRect.GetWidth(), areaRect.Top() ) );
 
     arrowRect.SetSize( Size( (gint)(ARROW_SIZE),
                              (gint)(ARROW_SIZE) ) );
@@ -719,7 +731,10 @@ void GtkSalGraphics::PaintCombobox( GtkStateFlags flags, cairo_t *cr,
         {
             gtk_style_context_save(mpEntryStyle);
             gtk_style_context_set_state(mpEntryStyle, flags);
-            gtk_style_context_set_junction_sides(mpEntryStyle, GTK_JUNCTION_RIGHT);
+            if (AllSettings::GetLayoutRTL())
+                gtk_style_context_set_junction_sides(mpEntryStyle, GTK_JUNCTION_LEFT);
+            else
+                gtk_style_context_set_junction_sides(mpEntryStyle, GTK_JUNCTION_RIGHT);
 
             gtk_render_background(mpComboboxStyle, cr,
                                   0, 0,
@@ -727,12 +742,13 @@ void GtkSalGraphics::PaintCombobox( GtkStateFlags flags, cairo_t *cr,
             gtk_render_frame(mpComboboxStyle, cr,
                              0, 0,
                              areaRect.GetWidth(), areaRect.GetHeight());
-
             gtk_render_background(mpEntryStyle, cr,
-                                  0, 0,
+                                  (aEditBoxRect.Left() - areaRect.Left()),
+                                  (aEditBoxRect.Top() - areaRect.Top()),
                                   aEditBoxRect.GetWidth(), aEditBoxRect.GetHeight() );
             gtk_render_frame(mpEntryStyle, cr,
-                             0, 0,
+                             (aEditBoxRect.Left() - areaRect.Left()),
+                             (aEditBoxRect.Top() - areaRect.Top()),
                              aEditBoxRect.GetWidth(), aEditBoxRect.GetHeight() );
 
             gtk_style_context_restore(mpEntryStyle);
-- 
cgit v0.10.2

From e2582341af9f6b756e5d95c8ddd99652b62d1a41 Mon Sep 17 00:00:00 2001
From: Khaled Hosny <khaledhosny@eglug.org>
Date: Mon, 17 Aug 2015 04:00:49 +0200
Subject: Fix GTK3 right-to-left rendering of spin buttons
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The button were not drawn at all

Change-Id: I51dfa30a6daa1034b5e978b09bcdfcc83e859f3d
Reviewed-on: https://gerrit.libreoffice.org/17790
Reviewed-by: Caol치n McNamara <caolanm@redhat.com>
Tested-by: Caol치n McNamara <caolanm@redhat.com>

diff --git a/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx b/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx
index 8ee0d0a..7344423 100644
--- a/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx
+++ b/vcl/unx/gtk3/gdi/gtk3salnativewidgets-gtk.cxx
@@ -139,25 +139,40 @@ Rectangle GtkSalGraphics::NWGetSpinButtonRect( ControlPart nPart, Rectangle aAre
     buttonRect.SetSize(Size(buttonWidth, buttonHeight));
     buttonRect.setY(aAreaRect.Top());
     buttonRect.Bottom() = buttonRect.Top() + aAreaRect.GetHeight();
+    Rectangle partRect(buttonRect);
     if ( nPart == PART_BUTTON_UP )
     {
-        buttonRect.setX(aAreaRect.Left() + (aAreaRect.GetWidth() - buttonRect.GetWidth()));
+        if (AllSettings::GetLayoutRTL())
+            partRect.setX(aAreaRect.Left());
+        else
+            partRect.setX(aAreaRect.Left() + (aAreaRect.GetWidth() - buttonRect.GetWidth()));
     }
     else if( nPart == PART_BUTTON_DOWN )
     {
-        buttonRect.setX(aAreaRect.Left() + (aAreaRect.GetWidth() - 2*buttonRect.GetWidth()));
+        if (AllSettings::GetLayoutRTL())
+            partRect.setX(aAreaRect.Left() + buttonRect.GetWidth());
+        else
+            partRect.setX(aAreaRect.Left() + (aAreaRect.GetWidth() - 2 * buttonRect.GetWidth()));
     }
     else
     {
-        buttonRect.Right() = (aAreaRect.Left() + (aAreaRect.GetWidth() - 2*buttonRect.GetWidth()))-1;
-        buttonRect.Left()   = aAreaRect.Left();
-        buttonRect.Top()    = aAreaRect.Top();
-        buttonRect.Bottom() = aAreaRect.Bottom();
+        if (AllSettings::GetLayoutRTL())
+        {
+            partRect.Right() = aAreaRect.Left() + aAreaRect.GetWidth();
+            partRect.Left()  = aAreaRect.Left() + (2 * buttonRect.GetWidth()) - 1;
+        }
+        else
+        {
+            partRect.Right() = (aAreaRect.Left() + (aAreaRect.GetWidth() - 2 * buttonRect.GetWidth())) - 1;
+            partRect.Left()  = aAreaRect.Left();
+        }
+        partRect.Top()    = aAreaRect.Top();
+        partRect.Bottom() = aAreaRect.Bottom();
     }
 
     gtk_style_context_restore(mpSpinStyle);
 
-    return buttonRect;
+    return partRect;
 }
 
 Rectangle GtkSalGraphics::NWGetScrollButtonRect( ControlPart nPart, Rectangle aAreaRect )
-- 
cgit v0.10.2

